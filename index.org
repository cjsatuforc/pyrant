#+TITLE: Pyrant Documentation
#+AUTHOR: Dharshan Rammohan & Vishakh Kumar



* Custom org-mode features for this file
Mainly to put custom TODO types so that everyone can use them.

#+NAME: startup
#+BEGIN_SRC emacs-lisp :tangle .dir-locals.el :noweb yes :results silent

(
  (org . (
          <<set_org_todo_keywords>>
          <<set_org_keyword_faces>>
         )
  )
)
#+END_SRC

** Set custom Org-mode headline tags
#+NAME: set_org_todo_keywords
#+BEGIN_SRC emacs-lisp
;; Set custom org-mode headline tags
(setq org-todo-keywords '(
                          (type  "Vi-TODO" 
                                 "Dharsh-TODO" 
                                 "ASK-Trey" 
                                 
                                 "Vi-CURRENT(!)" 
                                 "Dharsh-CURRENT(!)" 

                                 "|" 

                                 "Vi-Owner(!)"
                                 "Dharsh-Owner(!)")
                         )
)
#+END_SRC

** Set colors for headline tags
#+BEGIN_SRC emacs-lisp :results silent
;; Set colors for headline tags
(setq org-todo-keyword-faces
      '(
        ;; Todo Items
        ("Vi-TODO"         . (:foreground "white" :background "blue"                   )  ) 
        ("Dharsh-TODO"     . (:foreground "black" :background "yellow"                 )  )
        ("ASK-Trey"        . (:foreground "red"                           :weight bold )  )

        ;; In-progress Items
        ("Vi-CURRENT"      . (:foreground "blue"  :background "black"     :weight bold )  ) 
        ("Dharsh-CURRENT"  . (:foreground "blue"  :background "black"     :weight bold )  )

        ;; Finished items that are owned by
        ("Vi-Owner"        . (:foreground "Green"                         :weight bold )  )
        ("Dharsh-Owner"    . (:foreground "Green"                         :weight bold )  )
        )
)
#+END_SRC


* Tasks
  
** Hardware
*** Vi-TODO Flight Logic Controller
**** Vi-Owner Connect the arduino pins to raspberry pi pins for SPI interface
**** Vi-TODO Arduino
***** Vi-TODO Place two motor controller, one arduino mini & one IMU unit on a prototyping board
***** Vi-Owner Solder into place and use cables for pin management 
***** Vi-Owner IMU unit
****** Vi-Owner Connect header pins to IMU unit
****** Vi-Owner Connect IMU pins to Arduino pins through I2C interface
**** Vi-TODO Raspberry Pi 
***** Vi-Owner Connect cameras to board 
*** Vi-TODO Batteries
**** Vi-TODO Research Lipo-cell regulators for more than one battery
***** Vi-TODO Take into account adding extra batteries and a regulator increase weights, cost, and time spent in development for a marginal increase in flight time.
*** Dharsh-TODO Propellors 
**** Dharsh-TODO Pick up propellors from amazon
**** Dharsh-TODO Check if propellors fit the shaft.

Troubleshooting in advance.

Measure motor shaft thickness and update inventory. When propellors arrive, check for cavity thickness

When Vi goes to Microcenter next time, he will measure the motor shaft thickness and check for propellors that fit (along with a list of costs.) This will serve as the backup option should the propellors from Amazon be inadequete.

1) Motor Shaft is bigger but just a bit too big.
  Use a drill bit that fits the width of the propellor cavity. Borrow one from the woodshop and use the drill press.

2) Motor Shaft is smaller but just a bit too small.
  Use glue to make up for the difference and ensure that the propellors are aligned properly.
    Let the glue set when the motor is running.

3) Propellors are absolutely screwed.

  1) Buy from MicroCenter over the weekend OR
  2) 3D print propellors using the SLS printer.

**** Dharsh-TODO Connect propellors to motors and try dc powered test.
***** Vi-TODO Check for number of motors required for drone configuration

** Dharsh-TODO Simulink
*** Vi-Owner Added RASPlib library
*** Vi-Owner Implemented feedback-input comparator
*** Vi-Owner mux-ed and demux-d input and made subsystem

*** Dharsh-OWNER Integrate Motor controllers
**** Dharsh-TODO Add .c files to Matlab
**** Dharsh-TODO Add motor controller blocks to a subsystem and define input/output
      Note: Making this a seperate subsystem will make it easier to switch to a hexacopter motor control.
**** ASK-Trey Make a PID subsystem that accepts position based input.

*** Vi-TODO Building process
**** Vi-TODO Build c files and avr to arduino mini.
**** Vi-TODO Document in a bash script for easy use.

*** Dharsh-TODO SPI Communication with Raspberry pi to Arduino
*** Dharsh-TODO Communication between Raspberry pi and Matlab
   Note: If possible, add external python functions for ease of use
** Dharsh-TODO Controller logic
*** Dharsh-Owner Implement gyrometer, accelerometer & magnetometer PID controller
    Note: Philip (IEEE) mentioned that it would take far too long for the drones to come to a stop and hover and would not be appropiate for a swarm of controller
    Recommends switching to a position based PID controller

**** Dharsh-Owner Implement position based controller in Simulink
      Note: Pretend that the Raspberry Pi is sending signals but actually use the keyboard for mocking.
*** ASK-TreyTune the PID controllers for the drones
    Note: Begin with the innermost loop first and work your way out
** Vi-TODO OpenCV Software
*** Vi-TODO Implement the video combination thing and connect to Simulink
*** Vi-TODO Make simulink block that outputs velocity
*** Vi-TODO Create recognizable and easy to print rectangular squares for opencv to detect
**** Vi-TODO Camera lens distortion is an issue, pls fix
*** Vi-TODO Release OpenCV application as a statically linked package for MAtlab to use
Note: Remember uploading pything functions earlier with numpy? Didn't go well.

** Vi-TODO Drone Frame

The place where everything comes together! Design requirements below to aid design process.

Basic Requirements:

- [ ] Plywood body for drone.
- [ ] Fix components into drone body using screws
- [ ] Follow secondary requirements as much as possible.

Secondary Requirements:

- Battery 
  -[ ] Have space for drone cell or multiple cells if possible.
  - Have easy access to charging battery with a usb port (possibly the one used by Android phones pre-2017)
- Camera
  - [ ] Forward facing
  - [ ] Rest in static vertical position using a small slot in frame.
- Motor & Propellors
  - [ ] Ensure that there is adequete space for propellors and motors to prevent collision
  - [ ] Since plywood isn't appropiate for 3d structures, use ABS to make a small motor housing.
- IMUs
  - [ ] Ensure that the IMU is fixed with reference to the drone body
  - [ ] Ensure that the code taken in by matlab doesn't have differnt orientations than real-life
- General Electronics safety requirements
  - [ ] Ensure that electrical components are seperated from each other by air whenever possible.
  - [ ] Use glue on any extruding wires to minimize chance of electrical shortage

Tertiary Requirements

- Style
  - [ ] Add a brief description of the project with atleast the following: Name, Github Link, Authors.
  - [ ] Use printing tape for any engraved designed.
  - [ ] Stick to easy to engrave designs
- Payload
  - IR Emitter
    - [ ] Place the IR emitter and stop moving drone if too close to the wall.
  - LEDs
    - [ ]Add LEDs to demonstrate extra power consumption



*** Vi-Owner Place components on plywood/paper for rough mockup
    Effectively, ensure that you have a general shape for the drone before you CAD stuff up. Remember to adhere to the Design Requirements. If possible, consult with Dharsh & Trey to ensure that the design isn't blatenty stupid.
**** Vi-Todo Scan drawings for future reference.
    Use that fancy paper and markers from ME 1770. Note from Vi: This is the third time I've use it outside that class. Expectations pleasently shattered.

*** Vi-TODO Design drone shape 
**** Vi-TODO Design phase for drone frame
***** Vi-Owner Try to make thin frames with multiple overlays
 Effectively, make it thin and increase strength on thin frames by two planks. Go Deformable Bodies!
***** Vi-TODO Separate arduino & raspberry pi to prevent electrical shortages
***** Vi-TODO Add super glue to any extruding electrical components to minimize electrial shortages
**** Vi-TODO Solidworks phase
***** Vi-TODO Create mutilayer drone shape in SLD
***** Vi-TODO split using the split body function and check for excessive angles ruining final product.
Note: Also make sure it looks great.
**** Vi-TODO Invention studio
***** 3D print house casing for motors instead of using plywood.

* Inventory

|----------+------------------------------+---------+---------+--------------------------------------|
| Quantity | Item                         | Damaged | Require | Status                               |
|----------+------------------------------+---------+---------+--------------------------------------|
|        5 | batteries                    |         |       2 |                                      |
|        4 | micro sd cards               |         |       2 |                                      |
|        3 | micro sd card adapters       |         |       2 |                                      |
|        4 | arduino minis                |         |       2 |                                      |
|        2 | raspberry pi 0's             |         |       2 |                                      |
|        1 | fully cloaked raspberry pi 0 |         |       0 |                                      |
|        1 | card reader                  |         |       1 |                                      |
|        2 | IMUs - MPU965                |         |       2 |                                      |
|       20 | Motors                       |         |       8 |                                      |
|        0 | Propellors                   |         |       8 | Amazon Delivery under way (Dharshan) |
|        2 | Plywood                      |         |       1 |                                      |
|        8 | Motor Controller             |         |       4 |                                      |
|          |                              |         |         |                                      |
|----------+------------------------------+---------+---------+--------------------------------------|

** Battery 
 - Capacity:   500 mAh 
 - Voltage:    3.7V

** Raspberry Pi

 - [[https://www.raspberrypi.org/documentation/hardware/raspberrypi/][Spec sheet Link]]

** Arduino Pro Mini

 [[http://www.robotpark.com/Arduino-Pro-Mini-328-En][- Spec sheet Link]]

** Motor

 - No spec sheet available
 - KV Rating 

** Dharsh-TODO Propellers

 - No spec sheet available

** IMU

 - [[https://github.com/NelisW/myOpenHab/blob/master/docs/707-MPU-9250-9265%20IMU.md][Github Link]] 
 - [[http://www.invensense.com/wp-content/uploads/2015/02/PS-MPU-9250A-01-v1.1.pdf][Spec sheet]]
 - [https://www.google.com/url?sa=i&rct=j&q=&esrc=s&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwjw8LqL7cbaAhXMVN8KHar-A8sQjRx6BAgAEAU&url=https%3A%2F%2Fwww.14core.com%2Fwiring-the-mpu9250-9-axis-motion-tracking-micro-electro-mechanical-system%2F&psig=AOvVaw1CuFagNQTd-hrBjuOUPyaI&ust=1524244934643223][Pin out]

*** I2C Layout
#+ATTR_ORG: :width 2.0in
#+ATTR_LATEX: :width 2.0in
#+ATTR_HTML: :width 2.0in
#+DOWNLOADED: file:/Users/Dharshan/Documents/pyrant/Images/imu_i2c_pin_layout.png @ 2018-04-19 14:15:41
[[file:Inventory/imu_i2c_pin_layout_2018-04-19_14-15-41.png]]

 - Brief Description
 #+BEGIN_TEXT
 MPU-9250 module( 3 axis accelerator, 3 axis gyro and 3 axis magnetometer)
 Chip: MPU9250; Power voltage: 3~5V
 Communication mode: I2C / SPI; Gyro range: +/-250, +/-500, +/-1000, +/-2000dps
 Accelerator range: +/-2G, +/-4G, +/-8G, +/-16G
 Magnetometer range: +/-4800uF
 Pin spacing:2.54mm
 Size: 15mm*25mm (approx)
 #+END_TEXT




* Link to simulink code
